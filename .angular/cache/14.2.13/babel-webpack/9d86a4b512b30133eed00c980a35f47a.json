{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MultiSelectGenericPopUpSettings } from '../../shared/components/generic/multiselect-generic-grid/multiselect-generic-grid.component';\nimport { AlternateUnitComponent } from '../alternate-unit/alternate-unit.component';\nlet DetailInfoComponent = class DetailInfoComponent {\n  constructor(cdr, productMasterService, elementRef) {\n    this.cdr = cdr;\n    this.productMasterService = productMasterService;\n    this.elementRef = elementRef;\n    this.isDiscounted = 0;\n    this.applyPipeInRate = true;\n    this.mode = 'add';\n    this.test = 0;\n    this.modee = '';\n    this.productObj = {};\n    this.notify = new EventEmitter();\n    this.gridPopupSettingsForSupplier = new MultiSelectGenericPopUpSettings();\n    this.gridPopupSettingsForAccountLedgerList_Sales = new MultiSelectGenericPopUpSettings();\n    this.gridPopupSettingsForAccountLedgerList_SalesReturn = new MultiSelectGenericPopUpSettings();\n    this.gridPopupSettingsForAccountLedgerList_Purchase = new MultiSelectGenericPopUpSettings();\n    this.gridPopupSettingsForAccountLedgerList_PurchaseReturn = new MultiSelectGenericPopUpSettings();\n    this.gridPopupSettingsForItem = new MultiSelectGenericPopUpSettings();\n    this.MCatList = [];\n    this.LocationList = [];\n    this.MCat1List = [];\n    this.KOTcatList = [];\n    this.colorGroupList = [];\n    this.userSetting = this.productMasterService.userSetting;\n  }\n\n  isDisabled() {\n    return this.modee === 'view';\n  }\n\n  ngOnInit() {\n    if (this.mode == 'add') {\n      if (this.userSetting.AutoCheckInExpiryDateInput == 1) {\n        this.productObj.REQEXPDATE = 1;\n      }\n\n      this.productObj.PRATE_A = 0;\n      this.productObj.IN_RATE_A = 0;\n      this.productObj.discontinueCheckbox = false;\n      this.productObj.DISMODE = 'Discountable';\n      this.productObj.BillingDisplay = 0;\n    }\n\n    this.getCategoryList();\n    if (this.userSetting.EnableProductWiseAccMapping == 0) this.getSalesDetail();\n    this.getKOTCategoryList();\n    this.getColorGroupList();\n    this.getLocationList();\n  }\n\n  openStatusDropdown() {\n    this.StatusDropdown.nativeElement.classList.add('show');\n  }\n\n  onCheckOption(event, targetObj, targetKey) {\n    const input = event.target;\n\n    if (input) {\n      targetObj[targetKey] = input.checked ? 1 : 0;\n\n      if (targetKey == \"HASECSCHARGE\" && input.checked) {\n        this.productObj.ECSRATE = this.userSetting.ECSRATE;\n      } else if (targetKey == \"HASECSCHARGE\" && !input.checked) {\n        this.productObj.ECSRATE = 0;\n      }\n\n      if (targetKey == \"HASBATCH\" && this.userSetting.EnableBatchWisePrice == 2 && this.userSetting.EnableBatch != 0) {\n        this.notify.emit(input.checked ? 1 : 0);\n      }\n\n      this.cdr.detectChanges();\n    } else {\n      alert(\"Invalid input element\");\n    }\n  }\n\n  onCheckDiscountItemOption(event, value) {\n    const input = event.target;\n\n    if (input.checked) {\n      this.productObj.DISMODE = value;\n    } else {\n      this.productObj.DISMODE = 'Discountable';\n    }\n  }\n\n  getCategoryList() {\n    this.productMasterService.getMCatList().subscribe(res => {\n      this.MCatList = res;\n      this.productObj.MCAT = this.MCatList[0].MENUCAT;\n    });\n    this.productMasterService.getMCat1List().subscribe(res => {\n      this.MCat1List = res;\n    });\n  }\n\n  getLocationList() {\n    this.productMasterService.getLocationList().subscribe(res => {\n      this.LocationList = res;\n    });\n  }\n\n  getKOTCategoryList() {\n    this.productMasterService.getKOTCategory().subscribe(res => {\n      if (res.status == 'ok') {\n        this.KOTcatList = res.result;\n      }\n    });\n  }\n\n  getColorGroupList() {\n    this.productMasterService.getColorGroup().subscribe(response => {\n      const res = response;\n\n      if (res && res['status'] === 'ok' && res.result !== null) {\n        this.colorGroupList = res && res.result ? res.result : [];\n      } else {\n        this.colorGroupList = [];\n      }\n    }, err => {\n      this.colorGroupList = [];\n    });\n  }\n\n  onEnterSupplierCommand() {\n    this.getCustomersList();\n    this.genericGridSupplierPopup.show();\n  }\n\n  getCustomersList() {\n    this.gridPopupSettingsForSupplier = {\n      title: 'Supplier',\n      apiEndpoints: `/getAccountPagedListByPType/PA/V/0`,\n      defaultFilterIndex: 0,\n      columns: [{\n        key: 'ACNAME',\n        title: 'NAME',\n        hidden: false,\n        noSearch: false\n      }, {\n        key: 'VATNO',\n        title: 'PAN NO.',\n        hidden: false,\n        noSearch: false\n      }, {\n        key: 'ADDRESS',\n        title: 'ADDRESS',\n        hidden: false,\n        noSearch: false\n      }]\n    };\n  }\n\n  dblClickPopupParty(customer) {\n    this.productObj.SUPCODE = customer.ACID;\n    this.productObj.supplierName = customer.ACNAME;\n  }\n\n  getSalesDetail() {\n    this.productMasterService.getSalesInfo().subscribe(data => {\n      const arrayData = Object.values(data);\n      let salesAc = arrayData.filter(x => x.ACID == this.productMasterService.userSetting.SalesAc);\n      this.productObj.SAC_ACNAME = salesAc[0].ACNAME;\n      let salesReturnAc = arrayData.filter(x => x.ACID == this.productMasterService.userSetting.SalesReturnAc);\n      this.productObj.SRAC_ACNAME = salesReturnAc[0].ACNAME;\n      let purchaseAc = arrayData.filter(x => x.ACID == this.productMasterService.userSetting.PurchaseAc);\n      this.productObj.PAC_ACNAME = purchaseAc[0].ACNAME;\n      let purchaseReturnAc = arrayData.filter(x => x.ACID == this.productMasterService.userSetting.PurchaseReturnAc);\n      this.productObj.PRAC_ACNAME = purchaseReturnAc[0].ACNAME;\n    });\n  }\n\n  SalesAccountEnterClicked() {\n    this.gridPopupSettingsForAccountLedgerList_Sales = {\n      title: \"Accounts\",\n      apiEndpoints: `/getAccountPagedListByMapId/Details/Product Master`,\n      defaultFilterIndex: 1,\n      columns: [{\n        key: 'ACID',\n        title: 'AC CODE',\n        hidden: false,\n        noSearch: false\n      }, {\n        key: 'ACNAME',\n        title: 'A/C NAME',\n        hidden: false,\n        noSearch: false\n      }]\n    };\n    this.genericGridAccountLedger_Sales.show();\n  }\n\n  dblClickSalesAccountSelect(account) {\n    this.productObj.SAC = account.ACID;\n    this.productObj.SAC_ACNAME = account.ACNAME;\n    console.log('PAC', this.productObj.PAC);\n    console.log('PAC', this.productObj.PAC_ACNAME);\n  }\n\n  SalesReturnAccountEnterClicked() {\n    this.gridPopupSettingsForAccountLedgerList_SalesReturn = {\n      title: \"Accounts\",\n      apiEndpoints: `/getAccountPagedListByMapId/Details/Product Master`,\n      defaultFilterIndex: 1,\n      columns: [{\n        key: 'ACID',\n        title: 'AC CODE',\n        hidden: false,\n        noSearch: false\n      }, {\n        key: 'ACNAME',\n        title: 'A/C NAME',\n        hidden: false,\n        noSearch: false\n      }]\n    };\n    this.genericGridAccountLedger_SalesReturn.show();\n  }\n\n  dblClickSalesReturnAccountSelect(account) {\n    this.productObj.SRAC = account.ACID;\n    this.productObj.SRAC_ACNAME = account.ACNAME;\n    console.log('SRAC', this.productObj.SRAC);\n    console.log('SRAC', this.productObj.SRAC_ACNAME);\n  }\n\n  PurchaseAccountEnterClicked() {\n    this.gridPopupSettingsForAccountLedgerList_Purchase = {\n      title: \"Accounts\",\n      apiEndpoints: `/getAccountPagedListByMapId/Master/Product Master`,\n      defaultFilterIndex: 1,\n      columns: [{\n        key: 'ACID',\n        title: 'AC CODE',\n        hidden: false,\n        noSearch: false\n      }, {\n        key: 'ACNAME',\n        title: 'A/C NAME',\n        hidden: false,\n        noSearch: false\n      }]\n    };\n    this.genericGridAccountLedger_Purchase.show();\n  }\n\n  dblClickPurchaseAccountSelect(account) {\n    this.productObj.PAC = account.ACID;\n    this.productObj.PAC_ACNAME = account.ACNAME;\n    console.log('PAC', this.productObj.PAC);\n    console.log('PAC', this.productObj.PAC_ACNAME);\n  }\n\n  PurchaseReturnAccountEnterClicked() {\n    this.gridPopupSettingsForAccountLedgerList_PurchaseReturn = {\n      title: \"Accounts\",\n      apiEndpoints: `/getAccountPagedListByMapId/Master/Product Master`,\n      defaultFilterIndex: 1,\n      columns: [{\n        key: 'ACID',\n        title: 'AC CODE',\n        hidden: false,\n        noSearch: false\n      }, {\n        key: 'ACNAME',\n        title: 'A/C NAME',\n        hidden: false,\n        noSearch: false\n      }]\n    };\n    this.genericGridAccountLedger_PurchaseReturn.show();\n  }\n\n  dblClickPurchaseReturnAccountSelect(account) {\n    this.productObj.PRAC = account.ACID;\n    this.productObj.PRAC_ACNAME = account.ACNAME;\n    console.log('PRAC', this.productObj.PRAC);\n    console.log('PRAC', this.productObj.PRAC_ACNAME);\n  }\n\n  onEnterMasterItemList() {\n    this.gridPopupSettingsForItem = {\n      title: \"Product List\",\n      apiEndpoints: `/getMenuitemWithStockPagedList/0/A/all/PI/w`,\n      defaultFilterIndex: 0,\n      showIsDefaultSelection: true,\n      columns: [{\n        key: \"DESCA\",\n        title: \"NAME\",\n        hidden: false,\n        noSearch: false\n      }, {\n        key: \"MENUCODE\",\n        title: \"PRODUCT CODE\",\n        hidden: false,\n        noSearch: false\n      }, {\n        key: \"BASEUNIT\",\n        title: \"UNIT\",\n        hidden: false,\n        noSearch: false\n      }]\n    };\n    this.genericMultiSelectItem.show();\n  }\n\n  onSelectItem(value) {\n    this.productObj.SUPITEMCODE = value.MCODE;\n    this.productObj.SUPITEMNAME = value.DESCA;\n  }\n\n  RecalculateVATAmount() {\n    if (this.productObj.VAT == 1) {\n      if (this.productObj.IN_PRATE_A && this.productObj.IN_PRATE_A != 0) {\n        this.onChangeEx_PRate_A();\n      }\n\n      if (this.productObj.IN_RATE_A || this.productObj.IN_RATE_A == 0 || this.productObj.IN_RATE_A == null) {\n        let IN_Rate_A = (this.productObj.IN_RATE_A / this.productMasterService.nullToZeroConverter(this.userSetting.VatConRate)).toFixed(5);\n        this.productObj.RATE_A = Number(IN_Rate_A);\n        this.onChangeEx_Rate_A();\n      }\n\n      if (this.productObj.IN_RATE_B || this.productObj.IN_RATE_B == 0 || this.productObj.IN_RATE_B == null) {\n        let IN_Rate_B = (this.productObj.IN_RATE_B / this.productMasterService.nullToZeroConverter(this.userSetting.VatConRate)).toFixed(5);\n        this.productObj.RATE_B = Number(IN_Rate_B);\n      }\n\n      if (this.productObj.IN_RATE_C || this.productObj.IN_RATE_C == 0 || this.productObj.IN_RATE_C == null) {\n        this.productObj.IN_RATE_C = this.productObj.IN_RATE_C;\n        let IN_Rate_C = (this.productObj.IN_RATE_C / this.productMasterService.nullToZeroConverter(this.userSetting.VatConRate)).toFixed(5);\n        this.productObj.RATE_C = Number(IN_Rate_C);\n      }\n    } else {\n      if (this.productObj.IN_PRATE_A) {\n        this.onChangeEx_PRate_A();\n      }\n\n      if (this.productObj.IN_RATE_A || this.productObj.IN_RATE_A == 0 || this.productObj.IN_RATE_A == null) {\n        this.productObj.RATE_A = this.productObj.IN_RATE_A;\n        this.onChangeEx_Rate_A();\n      }\n\n      if (this.productObj.IN_RATE_B || this.productObj.IN_RATE_B == 0 || this.productObj.IN_RATE_B == null) {\n        this.productObj.RATE_B = this.productObj.IN_RATE_B;\n      }\n    }\n  }\n\n  RecalculateNonVATAmount_Ex_Prate_A() {\n    if (this.productObj.VAT == 1) {\n      if (this.productObj.PRATE_A || this.productObj.PRATE_A == 0) {\n        this.productObj.PRATE_A = this.productObj.PRATE_A;\n        let IN_PRATE_A = Number((this.productMasterService.nullToZeroConverter(this.productObj.PRATE_A) * this.productMasterService.nullToZeroConverter(this.userSetting.VatConRate)).toFixed(5));\n        this.productObj.IN_PRATE_A = Number(IN_PRATE_A);\n        this.onChangeEx_PRate_A();\n      }\n    } else {\n      this.productObj.PRATE_A = this.productObj.PRATE_A;\n    }\n  }\n\n  RecalculateNonVATAmount_Ex_Rate_A() {\n    if (this.productObj.VAT == 1) {\n      if (this.productObj.RATE_A || this.productObj.RATE_A == 0 || this.productObj.RATE_A == null || this.applyPipeInRate) {\n        let Rate_A = this.productMasterService.nullToZeroConverter(this.productObj.RATE_A) * this.productMasterService.nullToZeroConverter(this.userSetting.VatConRate);\n        this.productObj.IN_RATE_A = Number(Rate_A);\n        this.onChangeEx_Rate_A();\n      }\n    } else {\n      if (this.productObj.RATE_A || this.productObj.RATE_A == 0 || this.productObj.RATE_A == null) {\n        this.productObj.IN_RATE_A = this.productObj.RATE_A;\n        this.onChangeEx_PRate_A();\n      }\n    }\n  }\n\n  RecalculateNonVATAmount_Ex_Rate_B() {\n    if (this.productObj.VAT == 1) {\n      if (this.productObj.RATE_B || this.productObj.RATE_B == 0 || this.productObj.RATE_B == null) {\n        let RATE_B = (this.productMasterService.nullToZeroConverter(this.productObj.RATE_B) * this.productMasterService.nullToZeroConverter(this.userSetting.VatConRate)).toFixed(5);\n        this.productObj.IN_RATE_B = Number(RATE_B);\n      }\n    } else {\n      if (this.productObj.RATE_B || this.productObj.RATE_B == 0 || this.productObj.RATE_B == null) {\n        this.productObj.IN_RATE_B = this.productObj.RATE_B;\n        this.onChangeEx_PRate_A();\n      }\n    }\n  }\n\n  checkRecommendedVsActualMargin() {\n    var _a;\n\n    if (this.productObj.MARGIN > ((_a = this.productMasterService.pObj) === null || _a === void 0 ? void 0 : _a.RecMarginOnPRate)) {\n      this.productMasterService.openSuccessDialog(\"Actual Margin of Sales Price is less than Recommended Margin.\");\n    }\n  }\n\n  onChangeEx_PRate_A() {\n    this.productMasterService.pObj.PurchasePriceWithoutVAT = this.productObj.PRATE_A;\n    this.CalculateMargin();\n  }\n\n  onChangeEx_Rate_A() {\n    this.productMasterService.pObj.SalesPriceWithoutVAT = this.productObj.RATE_A;\n    this.CalculateMargin();\n  }\n\n  CalculateMargin() {\n    if (this.productMasterService.nullToZeroConverter(this.productMasterService.pObj.PurchasePriceWithoutVAT) == 0 || this.productMasterService.nullToZeroConverter(this.productMasterService.pObj.SalesPriceWithoutVAT) == 0) return;\n    this.productMasterService.pObj.RecMarginOnPRate = Number((this.productMasterService.pObj.SalesPriceWithoutVAT - this.productMasterService.pObj.PurchasePriceWithoutVAT) * 100 / this.productMasterService.pObj.PurchasePriceWithoutVAT).toFixed(5);\n    this.productMasterService.pObj.RecMarginOnRate = Number((this.productMasterService.pObj.SalesPriceWithoutVAT - this.productMasterService.pObj.PurchasePriceWithoutVAT) * 100 / this.productMasterService.pObj.SalesPriceWithoutVAT).toFixed(5);\n  }\n\n  preventInput($event) {\n    $event.preventDefault();\n    return false;\n  }\n\n  checkNonNegativeNumber() {\n    const weight = parseFloat(this.productObj.GWEIGHT);\n    const L = this.productObj.LENGTH;\n    const B = this.productObj.BREADTH;\n    const W = this.productObj.WIDTH;\n\n    if (isNaN(weight) || weight < 0) {\n      this.productObj.GWEIGHT = \"0\";\n    }\n\n    if ((L !== null && L !== void 0 ? L : 0) < 0) {\n      this.productObj.LENGTH = 0;\n    }\n\n    if ((B !== null && B !== void 0 ? B : 0) < 0) {\n      this.productObj.BREADTH = 0;\n    }\n\n    if ((W !== null && W !== void 0 ? W : 0) < 0) {\n      this.productObj.WIDTH = 0;\n    }\n  }\n\n  ngAfterViewInit() {}\n\n};\n\n__decorate([Input()], DetailInfoComponent.prototype, \"modee\", void 0);\n\n__decorate([ViewChild('DiscontinuedItem')], DetailInfoComponent.prototype, \"DiscontinuedItem\", void 0);\n\n__decorate([Input()], DetailInfoComponent.prototype, \"productObj\", void 0);\n\n__decorate([Output()], DetailInfoComponent.prototype, \"notify\", void 0);\n\n__decorate([ViewChild(AlternateUnitComponent)], DetailInfoComponent.prototype, \"child\", void 0);\n\n__decorate([ViewChild(\"genericGridSupplierPopup\")], DetailInfoComponent.prototype, \"genericGridSupplierPopup\", void 0);\n\n__decorate([ViewChild(\"genericGridAccountLedger_Sales\")], DetailInfoComponent.prototype, \"genericGridAccountLedger_Sales\", void 0);\n\n__decorate([ViewChild(\"genericGridAccountLedger_SalesReturn\")], DetailInfoComponent.prototype, \"genericGridAccountLedger_SalesReturn\", void 0);\n\n__decorate([ViewChild(\"genericGridAccountLedger_Purchase\")], DetailInfoComponent.prototype, \"genericGridAccountLedger_Purchase\", void 0);\n\n__decorate([ViewChild(\"genericGridAccountLedger_PurchaseReturn\")], DetailInfoComponent.prototype, \"genericGridAccountLedger_PurchaseReturn\", void 0);\n\n__decorate([ViewChild(\"genericMultiSelectItem\")], DetailInfoComponent.prototype, \"genericMultiSelectItem\", void 0);\n\n__decorate([ViewChild('StatusDropdown')], DetailInfoComponent.prototype, \"StatusDropdown\", void 0);\n\nDetailInfoComponent = __decorate([Component({\n  selector: 'lib-detail-info',\n  templateUrl: './detail-info.component.html',\n  styleUrls: ['./detail-info.component.css']\n})], DetailInfoComponent);\nexport { DetailInfoComponent };","map":null,"metadata":{},"sourceType":"module"}